You are a senior software architect with expertise in distributed systems and database technologies. Your task is to select the most suitable type of database for a new large-scale social platform based on a structured chain-of-thought reasoning process.

Consider the following application requirements:

A social platform expected to support millions of users

You need to store user profiles, user-generated posts, and social connections (friend/follow relationships)

The system must support high-speed data retrieval

The operational workload is expected to be 80% reads and 20% writes

Scalability is critical to accommodate a growing user base

Your analysis must follow a clear chain of thought and reasoning:

Identify key data types and access patterns (e.g., profile lookups, newsfeed generation, mutual friend queries).

Compare and contrast relevant database types (e.g., relational, document, graph, wide-column) in terms of how well they support those patterns.

Consider consistency, availability, and partition tolerance trade-offs relevant to this use case (CAP theorem).

Evaluate how each option handles horizontal scalability and sharding.

Make a final recommendation and justify your choice in the context of the above reasoning.

Output format:

Structured paragraphs based on each reasoning step

Final recommendation with concise justification
If needed, you may mention specific technologies (e.g., PostgreSQL, MongoDB, Neo4j, Cassandra) where relevant, but focus on database types and architectures rather than specific tools unless they strongly support your case.

If the answer does not fit into a single message — split it into several. Don’t save tokens.